"use strict";(self.webpackChunkwknd_nation=self.webpackChunkwknd_nation||[]).push([[902],{20902:function(i,t,n){n.r(t);n(21249),n(68309);var e=n(2934);n.n(e)().component("select-input",{props:["name","label","getValue","value","error","validator","required","options"],data:function(){var i={inputValue:"",inputOptions:[],isValid:!0,isActive:!1,showErrorMessage:!1};if(this.options&&"undefined"!==this.options.bind){var t="function"==typeof this.options?this.options():this.options;i.inputOptions=t.map((function(i){return void 0!==i&&void 0===i.value?{value:i,label:i}:i}))}return this.getValue&&"undefined"!==this.getValue.bind&&""+this.getValue(this.name)?i.inputValue=this.getValue(this.name):i.inputOptions.length&&(i.inputValue=i.inputOptions[0].value),i},watch:{value:function(i){this.inputValue=i},inputValue:function(){this.$emit("change",{value:this.inputValue,name:this.name})}},mounted:function(){this.$emit("change",{value:this.inputValue,name:this.name})},methods:{validate:function(){return this.validator?this.isValid=this.validator(this.inputValue):!this.required||""+this.inputValue?this.isValid=!0:this.isValid=!1,this.isValid},setActive:function(){this.isActive=!0},unsetActive:function(){this.inputValue||(this.isActive=!1)}},computed:{},template:'\n  <div>\n    <div class="select-input__wrap">\n      <label v-if="label" class="select-input__label p2">\n        {{label}}\n      </label>\n      <div class="select-input__el-wrap">\n        <select :name="name" class="select-input__el" v-model="inputValue">\n          <template v-if="inputOptions.length">\n            <option\n              v-for="(option, index) in inputOptions"\n              :value="option.value"\n              :selected="(inputValue === option.value)">\n              {{option.label}}\n            </option>\n          </template>\n        </select>\n        <span class="select-input__outline"></span>\n        <i class="select-input__icon"></i>\n      </div>\n    </div>\n    <transition name="error-fade">\n      <p v-if="!isValid" class="text-input__error red">{{error}}</p>\n    </transition>\n  </div>'})}}]);